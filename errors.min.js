document.addEventListener("DOMContentLoaded", () => {

      const code = document.getElementById("my-data").dataset.code;
      const domain = location.hostname;
      const homeUrl = `https://${domain}`;
      const supportUrl = `https://www.theindiangeographer.com/page/support?utm_source=chatgpt.com=${domain}&utm_content=error-report`;

      // Timestamp, Timezone & Year
      document.getElementById("timeStamp").textContent = new Date().toLocaleString();
      document.getElementById("timeZone").textContent = Intl.DateTimeFormat().resolvedOptions().timeZone;
      document.getElementById("year").textContent = new Date().getFullYear();
      document.getElementById("currentURL").textContent = window.location.href;
      document.getElementById("footertxt").textContent = "Managed by TheIndianGeographer. All rights reserved. (1.1.2)";

      // Buttons
      document.getElementById("homeBtn").href = homeUrl;
      const contactBtn = document.getElementById("contactBtn");
      contactBtn.href = supportUrl;
      contactBtn.target = "_blank";
      contactBtn.rel = "noopener noreferrer";

      // Favicon Loader
      (function loadFavicon() {
        const domainCandidate = domain.replace(/^https?:\/\//, "");
        const tryUrl = d => (d.startsWith("http") ? d : (location.protocol + "//" + d)) + "/favicon.ico";
        const googleSvc = "https://www.google.com/s2/favicons?sz=128&domain=" + encodeURIComponent(domainCandidate);

        const img = new Image();
        img.src = tryUrl(domainCandidate);
        img.crossOrigin = "anonymous";
        img.onload = () => applyFavicon(img.src);
        img.onerror = () => applyFavicon(googleSvc);

        function applyFavicon(src) {
          document.querySelectorAll("link[rel~='icon']").forEach(n => n.remove());
          const link = document.createElement("link");
          link.rel = "icon";
          link.href = src;
          document.head.appendChild(link);

          // also update <img id="favicon-img">
          const faviconImg = document.getElementById("logo");
          if (faviconImg) faviconImg.src = src;
        }
      })();

      // Fetch IP
      fetch("https://api.ipify.org?format=json")
        .then(res => res.json())
        .then(data => {
          document.getElementById("ipAddr").textContent = data.ip;
        })
        .catch(() => {
          document.getElementById("ipAddr").textContent = "unavailable";
        });

      const copyBtn = document.querySelector(".copy-btn");
      const urlBox = document.querySelector("#currentURL");

      copyBtn.addEventListener("click", () => {
        const text = urlBox.textContent.trim();

        if (!text) return; // nothing to copy

        navigator.clipboard.writeText(text).then(() => {
          // give some feedback
          copyBtn.textContent = "ÃƒÂ¢Ã…â€œÃ¢â‚¬Â¦";
          setTimeout(() => {
            copyBtn.textContent = "ÃƒÂ°Ã…Â¸Ã¢â‚¬Å“Ã¢â‚¬Â¹";
          }, 1500);
        }).catch(err => {
          console.error("Copy failed:", err);
      });
    });

      // ÃƒÂ°Ã…Â¸Ã¢â‚¬ÂÃ‚Â¥ Load error data from JSON
  fetch("https://res.cloudinary.com/tignetwork/raw/upload/theindiangeographer/assets/errordata.json")
    .then(res => res.json())
    .then(data => {
      const error = data[code] || data["404"]; // fallback if not found
      document.getElementById("errCode").textContent = code;
      document.getElementById("errTitle").textContent = error.title;
      document.getElementById("errMsg").textContent = error.txtmsg;
      document.getElementById("errTip").textContent = "Tip: " + error.tips;

      // ÃƒÂ°Ã…Â¸Ã¢â‚¬ÂÃ‚Â¥ Update <title>
      document.title = `${code} ${error.title} ÃƒÂ¢Ã¢â€šÂ¬Ã¢â‚¬Â TIGNetwork`;
    })
    .catch(err => {
      console.error("Could not load error data:", err);
    });

      // create watermark div
      const div = document.createElement("div");
      div.classList.add("bg-watermark");
      document.body.appendChild(div);

  });
